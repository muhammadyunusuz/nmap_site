<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta http-equiv="X-UA-Compatible" content="IE=edge" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>Scanner</title>
		<link rel="stylesheet" href="../style.css" />
	</head>
	<body>
		<p id="id" class="none"><%= data.history_id %></p>
		<div id="first_show_section" class="container none">
			<div class="header">
				<h2 class="title">Self-Scan</h2>
			</div>

			<main>
				<p class="policy">
					The self-scan attempts to find possible entry points for
					hackers into your externally available infrastructure.
					Please click on "START TEST" to test your system.
				</p>

				<div class="wrapper">
					<button class="start_scan">Start scan</button>
					<label class="checkbox_wrapper">
						<input
							class="input_checkbox"
							type="checkbox"
							name=""
							id="checkbox"
							checked
						/>
						<p>I agree to have my system scanned from externally</p>
					</label>
				</div>
			</main>
		</div>
		<div id="second_show_section" class="container none">
			<div class="header">
				<h2 class="title">Self-Scan progress...</h2>
			</div>

			<main>
				<div class="white_wrapper">
					<p class="policy">
						We are scanning your system. Please wait...
					</p>

					<div class="progress_bar">
						<div class="fluid">
							<p class="fluid_text">35%</p>
						</div>
					</div>
				</div>
			</main>
		</div>

		<div id="third_show_section" class="container">
			<div class="header">
				<h2 class="title">Self-Scan progress...</h2>
			</div>

			<main>
				<div class="white_wrapper">
					<div class="top_header">
						<img
							class="traffic_image"
							src="../traffic.png"
							alt="Traffic"
						/>
						<div class="warning_wrapper">
							<h2 class="warning_title">Warning!</h2>
							<p class="warning_text">
								The scanner detected a few possible
								vulnerabilities
							</p>
						</div>
					</div>

					<table>
						<thead>
							<tr>
								<th>Services</th>
								<th>Details</th>
							</tr>
						</thead>
						<tbody class="tbody">
							<!-- <tr>
								<td>80 Port</td>
								<td>Opened</td>
							</tr> -->
						</tbody>
					</table>
				</div>

				<div
					style="margin-top: 40px; display: flex; align-items: center"
				>
					<button id="copy_link" class="start_scan">
						Copy results link
					</button>
					<p style="margin-left: 20px">
						You can copy the results to the next scan in a link
						which will be valid for the next 10 days
					</p>
				</div>
			</main>
		</div>
		<script>
			const checkbox = document.querySelector("#checkbox");
			const button = document.querySelector(".start_scan");
			const id = document.querySelector("#id");
			const copy_link = document.querySelector("#copy_link");
			const firstSection = document.querySelector("#first_show_section");
			const thirdSection = document.querySelector("#third_show_section");
			const tbody = document.querySelector(".tbody");
			const secondSection = document.querySelector(
				"#second_show_section"
			);
			let history_id;
			let count = 10;
			const wt = document.querySelector(".warning_title");
			const wi = document.querySelector(".traffic_image");
			const wte = document.querySelector(".warning_text");
			const fluid = document.querySelector(".fluid");
			const fluid_text = document.querySelector(".fluid_text");

			checkbox.addEventListener("change", (evt) => {
				button.disabled = !evt.target.checked;
			});

			button.addEventListener("click", async (e) => {
				let data = await fetch("/start");
				data = await data.json();

				if (!data?.error) {
					history_id = data.history_id;

					firstSection.classList.add("none");
					secondSection.classList.remove("none");

					fluid_text.textContent = parseInt(100 / count) + "%";
					fluid.style.width = parseInt(100 / count) + "%";

					getData(history_id);
				}
			});

			async function getData(id) {
				let data = await fetch("/" + id);
				data = await data.json();

				if (!data.count) {
					renderData(data.history_data);
					secondSection.classList.add("none");
					thirdSection.classList.remove("none");
				}
			}

			window.addEventListener("DOMContentLoaded", (e) => {
				getData(id.textContent);

				copy_link.addEventListener("click", async (e) => {
					await window.navigator.clipboard.writeText(
						"https://site.com/old/" + (history_id || id.textContent)
					);
					alert("Copied");
				});
			});

			function renderData(data) {
				fluid_text.textContent = parseInt(100 / count) + "%";
				fluid.style.width = parseInt(100 / count) + "%";

				let x = 0;

				for (let i in data) {
					for (let d of data[i]) {
						d = d.split(" ");
						d = d.filter((e) => e.length);
						if (d.length) {
							const trElement = document.createElement("tr");
							const tdOneElement = document.createElement("td");
							const tdTwoElement = document.createElement("td");

							tdOneElement.textContent = d[0] + " " + d[2];
							tdTwoElement.textContent = "Opened";

							trElement.appendChild(tdOneElement);
							trElement.appendChild(tdTwoElement);
							if (d[1]?.startsWith("open")) {
								tbody.appendChild(trElement);
								x++;
							}
						}
					}
				}

				if (!x) {
					wt.textContent = "Super! All ports are closed.";
					wi.src = "../green.png";
					wte.textContent = "";
				}
			}
		</script>
	</body>
</html>
